@page "/ChangePasswordPage"
@page "/ChangePasswordPage/{token}/{email}"
@page "/ChangePasswordPage/{token}/{email}/{ischange}"
@layout EmptyLayout
@inject NavigationManager nav

<div class="form-table">

    <div class="form-group row">

        <div class="col-12" style="color:#ffffff">
            @if (ischange)
            {
                <div class="form-group" style="text-align:center;">
                    <p>New password</p>
                    <p><input @bind="@newpass" /></p>
                    <p>Repeat</p>
                    <p><input @bind="@repnewpass" /></p>
                    <p><button class="btn-big btn-green" @onclick="@(async () => await Change())">Change</button></p>
                    <p>@error_message</p>
                </div>
            }
            else
            {
                <div class="form-group" style="text-align:center;">
                    <p>Email</p>
                    <p><input @bind="@email" /></p>
                    <p><button class="btn-big btn-green" @onclick="@(async () => await SendRequest())">Request</button></p>
                    <p>@error_message</p>
                </div>
            }

        </div>

    </div>
</div>



@code {        


    protected override Task OnInitializedAsync()
    {
        if (email != null && token != null)
        {
            ischange = true;
        }
        return base.OnInitializedAsync();
    }


    [Parameter]
    public bool ischange { get; set; }


    [Parameter]
    public string email { get; set; }

    [Parameter]
    public string token { get; set; }


    string newpass;
    string repnewpass;


    string error_message;

    async Task SendRequest()
    {
        try
        {
            bool res = await GeneralLogic.GeneralObjects.httpClient_api.GetFromJsonAsync<bool>("/account/requestchangepassword?email=" + email);

            if (res)
            {
                nav.NavigateTo("/");
            }
            else
            {
                error_message = "Something went wrong";
            }
        }
        catch (Exception e)
        {

            Console.WriteLine(e.Message);
        }
    }

    async Task Change()
    {
        try
        {
            if (newpass != repnewpass)
            {
                 error_message = "Values do not match";
                return;
            }

            bool res = await GeneralLogic.GeneralObjects.httpClient_api.GetFromJsonAsync<bool>("/account/updatepassword?email=" + email+"&token="+token+"&newpassword="+newpass);

            if (res)
            {
                nav.NavigateTo("/");
            }
            else
            {
                error_message = "Something went wrong";
            }
        }
        catch (Exception e)
        {

            Console.WriteLine(e.Message);
        }
    }
}
