@inject IJSRuntime js

<div class="overview-header">
    <h1 class="overview-title"><i class="fas fa-eye"></i> Overview</h1>
</div>

@if (campaignListItems != null && campaignListItems.Count != 0)
{
    <div class="overview-stats">
        <div class="stat-card">
            <span>@campaignListItems.Count</span>
            <p>Total Live Campaigns</p>
        </div>
        <div class="stat-card">
            <span>@campaignListItems.Sum(x => x.clicks)</span>
            <p>Total Clicks</p>
        </div>
        <div class="stat-card">
            <span>@campaignListItems.Sum(x => x.impressions)</span>
            <p>Total Impressions</p>
        </div>
        <div class="stat-card">
            <span>@(campaignListItems.Sum(x => x.clicks) / campaignListItems.Sum(x => x.impressions)) %</span>
            <p>CTR</p>
        </div>
        <div class="stat-card">
            <span>$0</span>
            <p>Total Spend</p>
        </div>
        <div class="stat-card">
            <span>$0</span>
            <p>Available</p>
        </div>
    </div>
}
else
{
    <p class="no-data">Nothing to display yet</p>
}

@if (campaignListItems != null)
{
    <div class="campaign-container">
        @foreach (var item in campaignListItems)
        {
            <div class="campaign-card">
                <h2 class="campaign-title">@item.title<br><span>(@item.websitecampaignstatus)</span></h2>
                <p class="campaign-status">Status: @item.websitecampaignstatus</p>
                <p class="campaign-metrics">Clicks: @item.clicks</p>
                <p class="campaign-metrics">Impressions: @item.impressions</p>
                <p class="campaign-budget">Budget Left: $@item.budgetleft</p>
                <a href="#" class="btn-action"><i class="fas fa-chart-line"></i> View</a>
                <a href="#" class="btn-action"><i class="fas fa-cog"></i> Edit</a>
            </div>
        }
    </div>
}
else
{
    <p class="no-data">No campaigns to display</p>
}

@code {
    List<GeneralModels.Advertiser.Statistics.Overview.CampaignListItemModel> campaignListItems;

    protected override async Task OnInitializedAsync()
    {
        // Initialize data here
    }
}
